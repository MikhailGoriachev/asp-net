@{
    ViewBag.title = "Главная страница";
    ViewBag.pageHeader = "ГЛАВНАЯ СТРАНИЦА";
    ViewBag.PageName = "Index";
}


<!--Текст задания-->
<section>
    <h3 class="text-primary">Теоретическая часть </h3>
    <!--Верхний список-->

    <ul class="text-size-bigger">
        <li>Значения секция маршрутов по умолчанию</li>
        <li>Переменные маршрутов</li>
        <li>Необязательные секции маршрутов</li>
        <li>Литералы в маршрутах</li>
        <li>Задание нескольких именованных маршрутов в приложении</li>
        <li>Ограничения маршрутов</li>
        <li>Задания значений по умолчанию и ограничений анонимными объектами</li>
        <li>Введение в формы ASP.NET Core MVC с использованием вспомогательных тег-хелперов</li>
        <li>Атрибуты методов действия для обработки запросов различных типов – HttpGet, HttpPost и другие</li>
        <li>Понятие о привязке параметров метода действия к элементам ввода формы</li>
    </ul>

    <h3 class="text-primary">Практическая часть</h3>
    <p>
        Создать приложение ASP.NET Core MVC – одно приложение для решения двух задач. 
        Стилизацию приложения выполняйте при помощи фреймворка Bootstrap. 
    </p>
    <p>
        Примените страницу компоновки. Не забывайте создать модель для решения задачи. 
        По GET-запросу <b>/Home/Index</b> выводите этот текст. 
    </p>
    <p>
        <b>Задача 1. </b>
        Сведения о книгах в библиотеке содержат: идентификатор книги, фамилию и инициалы автора, 
        название, год издания, количество экземпляров данной книги в библиотеке, 
        цену одного экземпляра, имя файла с изображением обложки.
    </p>

    <p>
        Сведения о книгах хранятся в файле формата JSON в папке <b>App_Data</b> проекта. 
        В коллекции при инициализации должно быть сведения не менее чем о <b>10 книгах</b>.
    </p>
    <p>
        Тип упорядочивания и тип отбора задавайте переменной маршрута.
    </p>
    <p>
        Требуется реализовать функционал:
    </p>

    <ul>
        <li>Добавление книги в коллекцию (и в файл, данные вводить в форме)</li>
        <li>Редактирование данных книги, сохранять изменения в файле</li>
        <li>Удаление данных о книге из коллекции (и из файла)</li>
        <li>Выдача сведений о всех книгах коллекции в порядке сохранения 
            в файле данных</li>
        <li>Выдача сведений о всех книгах, упорядоченных по фамилиям авторов</li>
        <li>Выдача сведений о всех книгах, упорядоченных по годам издания</li>
        <li>Выдача сведений о всех книгах, упорядоченных по убыванию цены</li>
        <li>Выдача сведений о книгах с количеством, равным максимальному</li>
        <li>Выдача сведений о книгах с количеством, равным минимальному</li>
        <li>Выдача сведений о самых старых книгах</li>
        <li>Выдача сведений о самых новых книгах</li>
        <li>Выдача сведений о самых дорогих книгах</li>
        <li>Выдача сведений о книгах с минимальной ценой</li>
    </ul>

    <p>
        <b>Задача 2. </b>
        Требуется хранить в файле формата JSON в папке App_Data проекта коллекцию плоских геометрических фигур: 
        квадраты, прямоугольники, разносторонние треугольники. Сведения о фигуре содержат: тип, изображение фигуры, ее размеры. 
        Для фигуры надо также вычислять периметр и площадь.
    </p>

    <p>
        Инициализация коллекции должна проводиться при отсутствии файла, 
        формируйте не менее 10 фигур. 
    </p>
    <p>
        Требуется реализовать функционал (удаление, добавление и изменение фигуры в коллекции 
        подразумевает также сохранение коллекции в файле):
    </p>
    
    <ul>
        <li>Добавление фигуры в коллекцию, при этом тип и размеры фигуры генерируются в коде. 
            Загружать изображение не требуется, формируйте его по типу фигуры</li>
        <li>Редактирование только размеров фигуры в форме на отдельной странице</li>
        <li>Удаление фигуры</li>
        <li>Вывод всей коллекции в исходном порядке </li>
        <li>Вывод только квадратов, упорядочивая их по возрастанию периметра</li>
        <li>Вывод только прямоугольников, упорядочивая из по убыванию периметра</li>
        <li>Вывод только треугольников, в обратном порядке по отношению 
            к порядку в коллекции</li>
        <li>Вывод всей коллекции, упорядоченной по убыванию площади</li>
        <li>вывод всей коллекции, упорядоченной по типу фигур</li>
    </ul>

    <h3 class="text-primary">Дополнительно</h3>
    <p>
        Запись занятия можно скачать <a class="link-to-record" target="_blank" href="https://cloud.mail.ru/public/V4Bz/Y3rhejxB4">по этой ссылке</a>.
        Материалы занятия в этом же архиве.
    </p>

</section>