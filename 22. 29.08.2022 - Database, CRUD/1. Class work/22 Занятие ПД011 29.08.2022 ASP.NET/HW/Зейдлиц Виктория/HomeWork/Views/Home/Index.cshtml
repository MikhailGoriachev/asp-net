@{
    ViewBag.Title = "Главная";
}


<h2 class="h2">Теоретическая часть</h2>
<ul>
    <li>Привязка простых данных к методу действия контроллера</li>
    <li>Привязка сложных типов данных</li>
    <li>Привязка коллекция</li>
    <li>Задание источника для привязки данных к методу действия</li>
    <li>Понятие о компонентах представлений</li>
    <li>Создание компонентов и применение компонентов в разметке</li>
    <li><strong>POCO</strong>-компонент (<b>P</b>lain <b>O</b>ld <b>C</b>LR <b>O</b>bject)</li>
    <li>Построение компонента как расширение класса <strong>ViewComponent</strong></li>
    <li>Типы результата метода <strong>Invoke()</strong> компонентов представлений</li>
    <li>Размещение разметки компонента представления – в папке представлений
        контроллера или в папке <strong>_Shared</strong></li>
    <li>Передача параметров в компонент (в метод <strong>Invoke()</strong>) из представления</li>
    <li>Асинхронные компоненты</li>
    <li>Гибридные компоненты – контроллер с методом <strong>Invoke()</strong> и атрибутом
        <strong>ViewComponent</strong></li>
</ul>


<h2 class="h2">Практическая часть</h2>
<p>
    Создать приложение ASP.NET Core MVC. Стилизацию приложения выполняйте при помощи
    фреймворка Bootstrap. Примените страницу компоновки. Не забывайте создавать
    модель/модели для решения задачи. По GET-запросу <strong>/Home/Index</strong> выводите этот текст.   
</p>
<p>
    <strong>Задача 1</strong>. Требуется при помощи сервиса получать коллекцию из 42х персонажей,
    используя <a href="https://swapi.dev/"><b>ресурс</b></a>при помощи запроса 
    <a href="https://swapi.dev/api/people/"><b>https://swapi.dev/api/people/</b></a>.
    Обратите внимание, что выдается несколько записей, для загрузки требуемого количества придется
    использовать модификацию запроса. Какую именно – разберитесь по выдаче API.
    Сохранять в коллекции все поля, добавьте поле идентификатора. Коллекцию выводить в
    компонент представления в табличном виде, выводите не более 8 полей.
    Компонент и сервис рекомендуется сделать асинхронными. Обработка в коде
    компонента – вывод среднего веса персонажей, разности минимального и максимального весов.
</p>
<ul>
    <li>По кнопке, размещенной в табличном выводе компонента, на отдельной странице
        вывести подробную информацию о персонаже (все поля), вывод выполнить в еще один
        компонент представления 
    </li>
    <li>По кнопке в интерфейсе страницы выбрать персонажей с заданным диапазоном веса, 
        параметры выборки передавать в компонент представления вывода коллекции персонажей
    </li>
    <li>По кнопке в интерфейсе страницы выбрать персонажей с заданным названием «родной» планеты, 
        параметры выборки передавать в компонент представления вывода коллекции персонажей
    </li>
    <li>
        По кнопке в интерфейсе страницы выводить в компонент представления коллекции персонажей, упорядоченной по возрастанию массы
    </li>
</ul>

<p>
    <strong>Задача 2</strong>. Требуется при помощи сервиса получать коллекцию из 33х планет, используя 
    <a href="https://swapi.dev/"><b>ресурс</b></a> при помощи запроса 
    <a href="https://swapi.dev/api/planets/"><b>https://swapi.dev/api/planets/</b></a>. 
    Обратите внимание, что выдается несколько записей, для загрузки требуемого количества придется использовать модификацию запроса.
    Какую именно – разберитесь по выдаче API. Сохранять в коллекции все поля, добавьте поле идентификатора. Коллекцию выводить в
    компонент представления в табличном виде, выводите не более 8 полей. Компонент и сервис рекомендуется сделать асинхронными.
    Компонент должен быть гибридным. Обработка в коде компонента – вывод минимального, среднего и максимального диаметра планет; 
    минимального, среднего и максимального орбитального периода планет.
</p>
<ul>
    <li>
        По кнопке, размещенной в табличном выводе компонента, на отдельной странице вывести подробную информацию о
        планете (все поля), вывод выполнить в еще один компонент представления
    </li>
    <li>
        По кнопке в интерфейсе страницы выбрать планеты с заданным типом поверхности, параметр выборки передавать в
        компонент представления вывода коллекции планет
    </li>
    <li>
        По кнопке в интерфейсе страницы выбрать планеты с заданным диапазоном значений диаметра планеты,
        параметры выборки передавать в компонент представления вывода коллекции планет
    </li>
    <li>
        По кнопке в интерфейсе страницы выводить в компонент представления вывода коллекции планет,
        сведения о планетах, упорядоченные по убыванию массы
    </li>
</ul>

<p>
    Разработайте сервис логирования, сохраняющий в файле <strong>application.log</strong> в папке
    <strong>App_Data</strong> факты создания и редактирования сведений о клиентах: момент времени
    операции с точностью до секунды, собственно данные клиента (включая закодированный пароль).
</p>
<p>
    Разработайте глобальный фильтр исключений – сервис с внедрением зависимостей. Параметры исключений
    записывайте в файл журнала при помощи сервиса логирования.
</p>


<h2 class="h2">Дополнительно</h2>
 <p>Запись занятия можно скачать по <a href="https://cloud.mail.ru/public/bhgA/bSXe9nWZS"><b>этой ссылке</b></a>.
     Материалы занятия в этом же архиве.
 </p>
