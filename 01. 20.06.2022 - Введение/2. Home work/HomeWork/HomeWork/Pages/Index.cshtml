@page
@model HomeWork.Pages.IndexModel
@{
    // индекс страницы
    ViewBag.indexTab = 0;

    // название страницы
    ViewData["Header"] = "Главная";
}

<article>
    <!-- #region Теоретическая часть -->
    <details open>
        <summary>
            <h2>Теоретическая часть</h2>
        </summary>

        <ul>
            <li>Введение в клиент-серверную технологию ASP.NET</li>
            <li>Понятие о Razor Pages</li>
            <li>Создание проекта ASP.NET Core с использованием стандартного шаблона приложения Visual Studio 2022</li>
            <li>Структура проекта, основные папки проекта</li>
            <li>Добавление функциональности Razor Pages в пустой проект ASP.NET Core</li>
            <li>Состав Razor page: файл представления и файл кода модели представления </li>
            <li>Добавление страниц Razor Pages в проект</li>
            <li>Разрешение использования статических файлов в проекте, подключение css-файлов. Размещение медиа-файлов
                на примере файлов изображений</li>
            <li>Основы синтаксиса языка шаблонов Razor (комментарии, определение и вывод переменных, операторы
                ветвления,
                циклов; работа с моделями данных)</li>
            <li>Понятие о динамическом типе данных в C# на примере свойства ViewBag</li>
            <li>Директивы языка шаблонов Razor</li>
            <li>Понятие о тэг-хелперах для формирования ссылок на страницы</li>
            <li>Использование мастер-страницы для формирования Razor-страниц</li>
            <li>Файлы для подключения мастер-страницы, импорта директив Razor</li>
        </ul>
    </details>
    <!-- #endregion -->

    <!-- #region Практическая часть -->
    <details open>
        <summary>
            <h2>Практическая часть</h2>
        </summary>

        <p>
            Разработайте приложение ASP.NET Core, состоящее из нескольких страниц Razor
            Pages. На каждой странице разместите решение одной задачи, на главной странице
            (Index.cshtml) разместите задание на разработку.
        </p>

        <!-- #region Задача 1-->
        <p>
            <b>Задача 1.</b> Имя страницы Book.cshtml. В ответ на GET-запрос клиента <b>/Book</b>
            сформировать представление со сведениями об учебнике по программированию на Python
            (используйте модель): автор Бриггс Дж.; название «Python для детей. Самоучитель по
            программированию», год издания 2017. Обложка:
        </p>

        <div class="content-center"><img src="~/images/book_view.jpeg" alt="книга"></div>

        <!-- #endregion -->

        <!-- #region Задача 2 -->
        <p>
            <b>Задача 2.</b> Имя страницы SailingFleet.cshtml. В ответ на GET-запрос клиента
            <b>/SailingFleet</b> сформировать представление со сведениями о трех парусных кораблях
            (длина в метрах, ширина в метрах, водоизмещение в тоннах, название, год постройки,
            изображение): линейный корабль «Виктория», чайный клиппер «Катти Сарк» и барк
            «Крузенштерн». Используйте модель, коллекцию.
        </p>
        <!-- #endregion -->

        <!-- #region Задача 3 -->
        <p>
            <b>Задача 3.</b> Имя страницы <b>Cities.cshtml</b>. В ответ на Get-запрос клиента <b>/Cities</b>
            сформировать представление со сведениями о пяти городах по Вашему выбору. Используйте
            модель, коллекцию. По каждому городу требуется выводить: название, год основания, герб,
            население на текущий момент, площадь.
        </p>
        <!-- #endregion -->
    </details>
    <!-- #endregion -->

    <!-- #region Дополнение -->
    <details open>
        <summary>
            <h2>Дополнение</h2>
        </summary>

        <p>
            Запись занятия можно скачать
            <a href="https://cloud.mail.ru/public/p7xB/6MM4Q1gWC" target="_blank">по этой ссылке</a>.
            Материалы занятия в этом же архиве.
        </p>
    </details>
    <!-- #endregion -->
</article>
