@page
@model Homework.Pages.IndexModel
@{
	ViewBag.Title = "Главная страница - Домашняя работа";
	ViewBag.Header = "Главная страница";
	ViewBag.PageName = "Index";
}

<section>
	<article>
		<h2>Теоретическая часть</h2>
		<ul>
			<li>Использование <b>static</b>-свойств для организации хранения данных между запросами</li>
			<li>Использование нескольких форм на одной странице, обработчики <b>POST</b>-запросов</li>
			<li>Секции в файле макета, в файлах страниц </li>
			<li>Тег-хелперы форм для скалярных элементов управления</li>
			<li>Тег-хелперы и классы для работы со списочными элементами управления</li>
			<li>Использование нескольких кнопок <b>submit</b> на одной форме</li>
			<li><i>Запись в файл в формате JSON, чтение из файла в формате JSON с использованием пакета Newtonsoft – пример в коде страницы Page02</i></li>
		</ul>

		<h2>Практическая часть</h2>

		<p>Разработайте приложение ASP.NET Core, состоящее из нескольких страниц Razor Pages. На каждой странице разместите
		 решение одной задачи, на главной странице (<b>Index.cshtml</b>) разместите задание на разработку. Во всех формах <b>валидация
		 не требуется</b>. В навигационном меню используйте тег-хэлперы <b>asp-page</b>. </p>

		<p><b>Страница 1.</b>Создайте коллекцию данных о бытовой технике на оптовом складе (наименование, тип техники,
			артикул, цена, количество, изображение). В коллекции должно быть не менее 12 элементов. Коллекцию инициируйте
			набором записей, храните коллекцию в файле формата JSON в папке App_Data проекта.
			По кнопкам <b>submit</b>, размещенным на странице вызывайте обработчики запросов POST:</p>

		<ul>
			<li>вывод коллекции, упорядоченной по наименованию</li>
			<li>вывод коллекции, упорядоченной по убыванию цены</li>
			<li>вывод коллекции, упорядоченной по возрастанию количества</li>
			<li><i>добавление новой записи о товаре, файл с изображением формируйте по типу товара, не загружайте его на сервер</i></li>
			<li>вывод части коллекции – товары с ценой, попадающей в заданный диапазон.</li>
		</ul>

		<p>В форме задайте диапазон цены, по кнопке submit выводите часть коллекции – товары с ценой, попадающей в заданный диапазон. </p>

		<p><b>Страница 2.</b>
			Требуется хранить в файле формата JSON в папке App_Data проекта коллекцию плоских геометрических фигур: квадраты,
			прямоугольники, разносторонние треугольники. <i>Инициализация коллекции должна проводиться при отсутствии файла,
				формируйте не менее 10 фигур.</i> По кнопке <b>submit</b> (метод POST) формируйте фигуру, случайным образом выбирая ее тип 
			и размер. <b>Создайте форму для ввода параметров фигуры. Загружать изображение не требуется, формируйте его по типу
			фигуры. Добавляйте фигуры в коллекцию, сохраняйте коллекцию.</b> Отображайте коллекцию на этой же странице, выводите 
			также изображение фигуры.</p>

		<p>По ссылкам на этой странице вызывайте обработчики запросов GET:</p>

		<ul>
			<li>вывод только квадратов, по убыванию площади</li>
			<li>вывод только прямоугольников, по возрастанию периметра</li>
			<li>вывод только треугольников, в обратном порядке по отношению к порядку в коллекции</li>
			<li>вывод всей коллекции в исходном порядке</li>
			<li>вывод всей коллекции по убыванию площади</li>
			<li><i>вывод всей коллекции, упорядоченной по типу фигур</i></li>
		</ul>

		 <h2>Дополнение</h2>
                <p>Запись занятия можно скачать по <a href="https://cloud.mail.ru/public/oM1M/rqtv9f8YQ"><b>этой ссылке</b></a>.
                    Материалы занятия – в этом же архиве.</p>

	</article>
</section>
