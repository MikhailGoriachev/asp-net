@page
@model HomeWork.Pages.IndexModel
@{
    ViewBag.Title = "Главная";
    ViewBag.PageName = "Index";
}

<section class="mx-sm-5 my-5 bg-light shadow-sm border rounded-3 h-75 p-3">
    <!-- #region Теоретическая часть -->
    <details open>
        <summary class="h5 text-primary">
            Теоретическая часть
        </summary>

        <ul>
            <li>Классы для стилизации изображений в Bootstrap</li>
            <li>Введение в работу с формами в Bootstrap</li>
            <li>Вертикальные формы и формы в строку</li>
            <li>Классы стилей меток, полей ввода, чек-боксов и радиокнопок</li>
            <li>Классы для списочных элементов управления</li>
            <li>Классы для групповых элементов ввода, в том числе кнопки с выпадающим списком</li>
            <li>Классы «плавающих» меток</li>
            <li>Классы для поддержки валидации форм</li>
        </ul>

    </details>
    <!-- #endregion -->


    <!-- #region Практическая часть -->
    <details open>
        <summary class="h5 text-primary">
            Практическая часть
        </summary>

        <p>
            Разработайте приложение ASP.NET Core, состоящее из нескольких страниц Razor Pages. На каждой странице
            разместите решение одной задачи, на главной странице (<b>Index.cshtml</b>) разместите задание на
            разработку
            (используйте стили Bootstrap). Использовать еще не пройденные классы Bootstrap для навигации <b>не
                надо</b>.
            Используйте рассмотренные на занятии возможности Bootstrap, навигационное меню постройте на базе
            ссылок-кнопок и тег-хэлперов <b>asp-page</b>.
        </p>

        <!-- #region Задание 1 -->
        <p>
            <b>Страница 1</b>. Создайте коллекцию данных о бытовой технике на оптовом складе (наименование, тип
            техники,
            артикул, цена, количество, изображение). В коллекции должно быть не менее 12 элементов. Коллекцию
            инициируйте набором записей, храните коллекцию в файле формата JSON в папке App_Data проекта.
        </p>

        <p>
            Отображение данных одного элемента бытовой техники выполняйте при помощи карточки, стилизованной
            соответствующими классами Bootstrap.
        </p>

        <p>
            По кнопкам-ссылкам, размещенным на странице вызывайте обработчики запросов GET:
        </p>

        <ul>
            <li>вывод коллекции, упорядоченной по наименованию</li>
            <li>вывод коллекции, упорядоченной по убыванию цены</li>
            <li>вывод коллекции, упорядоченной по возрастанию количества </li>
            <li>
                добавление элемента в коллекцию, параметры вводить в форму, стилизованную классами Bootstrap,
                сохраняйте измененную коллекцию в файле в формате JSON, как было сказано ранее, в папке App_Data
                проекта
            </li>
        </ul>
        <!-- #endregion -->

        <!-- #region Задание 2 -->
        <p>
            <b>Страница 2</b>. Требуется хранить в файле формата JSON в папке App_Data проекта коллекцию плоских
            геометрических фигур: квадраты, прямоугольники, разносторонние треугольники. Инициализация коллекции
            должна проводиться при отсутствии файла (формируйте не менее 10 фигур).
        </p>

        <p>
            В форме на странице выбирайте тип фигуры, и по кнопке «Создать» формируйте еще одну форму (на этой же
            странице) для ввода параметров фигуры. При рендеринге формы для параметров форму для выбора типа фигуры
            рендерить не надо. Все формы должны быть стилизованы классами Bootstrap.
        </p>

        <p>
            Отображайте коллекцию на этой же странице в таблице, стилизованной классами Bootstrap (в ячейке таблицы
            также выводите изображение фигуры).
        </p>

        <p>
            По ссылкам на этой странице (кнопкам в стиле Bootstrap) вызывайте обработчики запросов GET:
        </p>

        <ul>
            <li>вывод всей коллекции в исходном порядке </li>
            <li>вывод только квадратов, по убыванию площади</li>
            <li>вывод только прямоугольников, по возрастанию периметра</li>
            <li>вывод только треугольников, в обратном порядке по отношению к порядку в коллекции</li>
            <li>вывод всей коллекции по убыванию площади</li>
            <li>вывод всей коллекции, упорядоченной по типу фигур</li>
        </ul>
        <!-- #endregion -->

    </details>
    <!-- #endregion -->

    <!-- #region Дополнительно -->
    <details open>
        <summary class="h5 text-primary">
            Дополнительно
        </summary>

        <p>
            Запись занятия можно скачать по <a href="https://cloud.mail.ru/public/eYKy/2sQ34XF5S" target="_blank">этой
                ссылке</a>. Материалы занятия в этом же архиве.
        </p>

    </details>
    <!-- #endregion -->
</section>