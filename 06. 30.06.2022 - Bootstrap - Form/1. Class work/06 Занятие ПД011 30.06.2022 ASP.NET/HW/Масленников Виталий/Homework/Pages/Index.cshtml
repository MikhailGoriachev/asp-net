@page
@model Homework.Pages.IndexModel
@{
	ViewBag.Header = "Главная страница";
}


<div class="brief">
	<h2>Теоретическая часть</h2>

	<ul>
		<li>Введение в
			<a href="https://getbootstrap.com/docs/5.1/getting-started/introduction/">Bootstrap</a>
		</li>
		<li>Виды контейнеров для размещения контента</li>
		<li>Основы сеточной системы</li>
		<li>Элементы типографики</li>
		<li>Контекстные цвета для текста и для фона</li>
		<li>Классы стилей для таблиц</li>
		<li>Классы стилей для уведомлений</li>
		<li>Классы стилей для кнопок (в том числе для ссылок)</li>
		<li>Классы стилей для групп кнопок (вложенные группы кнопок – ссылки)</li>
		<li>Классы стилей для карточек</li>
	</ul>

	<h2>Практическая часть</h2>

	<p>Разработайте приложение ASP.NET Core, состоящее из нескольких страниц Razor Pages. На каждой странице
		разместите решение одной задачи, на главной странице (<b>Index.cshtml</b>) разместите задание на
		разработку
		(используйте стили Bootstrap). Создание форм <b>не требуется</b>. Использовать еще не пройденные
		классы
		Bootstrap для навигации <b>не надо</b>. Используйте рассмотренные на занятии возможности Bootstrap,
		навигационное меню постройте на базе ссылок-кнопок и тег-хэлперов <b>asp-page</b>.</p>

	<p><b>Страница 1.</b> Создайте коллекцию данных о бытовой технике на оптовом складе (наименование, тип
		техники, артикул, цена, количество, изображение). В коллекции должно быть не менее 12 элементов.
		Коллекцию инициируйте набором записей, храните коллекцию в файле формата JSON в папке App_Data
		проекта.
	</p>

	<p>Отображение данных одного элемента бытовой техники выполняйте при помощи карточки, стилизованной
		соответствующими классами Bootstrap.</p>

	<p>По кнопкам-ссылкам, размещенным на странице вызывайте обработчики запросов GET:</p>


	<ul>
		<li>вывод коллекции, упорядоченной по наименованию</li>
		<li>вывод коллекции, упорядоченной по убыванию цены</li>
		<li>вывод коллекции, упорядоченной по возрастанию количества</li>
	</ul>


	<p><b>Страница 2.</b>
		Требуется хранить в файле формата JSON в папке App_Data проекта коллекцию плоских геометрических
		фигур:
		квадраты, прямоугольники, разносторонние треугольники. Инициализация коллекции должна проводиться
		при
		отсутствии файла (формируйте не менее 10 фигур). По кнопке-ссылке (метод GET) формируйте фигуру,
		случайным образом выбирая ее тип и размер. Добавляйте фигуры в коллекцию, сохраняйте коллекцию.
		Отображайте коллекцию на этой же странице в таблице, стилизованной классами Bootstrap (в ячейке
		таблицы
		также выводите изображение фигуры).
	</p>

	<p>По ссылкам на этой странице (кнопкам в стиле Bootstrap) вызывайте обработчики запросов GET:</p>

	<ul>
		<li>вывод всей коллекции в исходном порядке</li>
		<li>вывод только квадратов, по убыванию площади</li>
		<li>вывод только прямоугольников, по возрастанию периметра</li>
		<li>вывод только треугольников, в обратном порядке по отношению к порядку в коллекции</li>
		<li>вывод всей коллекции по убыванию площади</li>
		<li>вывод всей коллекции, упорядоченной по типу фигур</li>
	</ul>
</div>