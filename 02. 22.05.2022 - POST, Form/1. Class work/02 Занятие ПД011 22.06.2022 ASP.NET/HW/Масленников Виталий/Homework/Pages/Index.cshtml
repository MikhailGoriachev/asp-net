@page
@model Homework.Pages.IndexModel
@{
	ViewBag.Title = "Главная страница - Домашняя работа";
	ViewBag.Header = "Главная страница";
	ViewBag.PageName = "Index";
}

<section>
	<article>
		<h2>Теоретическая часть</h2>
		<ul>
			<li>Введение в клиент-серверную технологию ASP.NET</li>
			<li>Понятие о Razor Pages</li>
			<li>Создание проекта ASP.NET Core с использованием стандартного шаблона приложения Visual Studio
				2022
			</li>
			<li>Структура проекта, основные папки проекта</li>
			<li>Добавление функциональности Razor Pages в пустой проект ASP.NET Core</li>
			<li>Состав Razor page: файл представления и файл кода модели представления</li>
			<li>Добавление страниц Razor Pages в проект</li>
			<li>Разрешение использования статических файлов в проекте, подключение css-файлов. Размещение
				медиа-файлов на примере файлов изображений
			</li>
			<li>Основы синтаксиса языка шаблонов Razor (комментарии, определение и вывод переменных, операторы
				ветвления, циклов; работа с моделями данных)
			</li>
			<li>Понятие о динамическом типе данных в C# на примере свойства ViewBag</li>
			<li>Директивы языка шаблонов Razor</li>
			<li>Понятие о тэг-хелперах для формирования ссылок на страницы</li>
			<li>Использование мастер-страницы для формирования Razor-страниц</li>
			<li>Файлы для подключения мастер-страницы, импорта директив Razor</li>
		</ul>

		<h2>Практическая часть</h2>

		<p>Разработайте приложение ASP.NET Core, состоящее из нескольких страниц Razor Pages. На каждой странице
			разместите решение одной задачи, на главной странице (Index.cshtml) разместите задание на
			разработку. </p>

		<p><b>Страница 1.</b>Имя страницы <b>Book.cshtml</b>. В ответ на GET-запрос клиента <b>/Book</b>
			сформировать
			представление со сведениями об учебнике по программированию на Python (используйте модель): автор
			Бриггс Дж.; название «Python для детей. Самоучитель по программированию», год издания 2017. Обложка:
		</p>
		<img class="img-centered" src="images/book.jpeg" alt="Книга"/>

		<p><b>Страница 2.</b>
			Имя страницы <b>SailingFleet.cshtml</b>. В ответ на GET-запрос клиента <b>/SailingFleet</b>
			сформировать
			представление со сведениями о трех парусных кораблях (длина в метрах, ширина в метрах, водоизмещение
			в тоннах, название, год постройки, изображение): линейный корабль «Виктория», чайный клиппер «Катти
			Сарк» и барк «Крузенштерн». Используйте модель, коллекцию.
		</p>

		<p><b>Страница 3.</b>Имя страницы <b>Cities.cshtml</b>. В ответ на Get-запрос клиента /Cities сформировать
			представление со сведениями о пяти городах по Вашему выбору. Используйте модель, коллекцию. По
			каждому городу требуется выводить: название, год основания, герб, население на текущий момент,
			площадь.
		</p>
	</article>
</section>
