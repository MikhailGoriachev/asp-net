@page
@model HomeWork.Pages.IndexModel
@{
    // индекс страницы
    ViewBag.indexTab = 0;

    // название страницы
    ViewData["Header"] = "Главная";
}

<article>
    <!-- #region Теоретическая часть -->
    <details open>
        <summary>
            <h2>Теоретическая часть</h2>
        </summary>

        <ul>
            <li>Привязка свойств страниц и моделей Razor к параметрам запроса</li>
            <li>Понятие о передаче параметров методом GET</li>
            <li>Понятие о маршрутизации</li>
            <li>Параметры маршрутов</li>
            <li>Обработчики страницы для запросов GET</li>
        </ul>
    </details>
    <!-- #endregion -->

    <!-- #region Практическая часть -->
    <details open>
        <summary>
            <h2>Практическая часть</h2>
        </summary>

        <p>
            Разработайте приложение ASP.NET Core, состоящее из нескольких страниц Razor Pages. На каждой странице
            разместите решение одной задачи, на главной странице (<b>Index.cshtml</b>) разместите задание на разработку.
            Во
            всех формах <b>валидация не требуется</b>. В навигационном меню используйте тег-хэлперы <b>asp-page</b>.
        </p>

        <!-- #region Задача 1-->
        <p>
            <b>Задача 1.</b> В форме вводите данные о бытовой технике на оптовом складе (наименование, артикул, цена,
            количество, изображение). Используйте привязку параметров формы к свойствам модели страницы. Введенные
            данные отображайте на этой же странице.
        </p>
        <!-- #endregion -->

        <!-- #region Задача 2 -->
        <p>
            <b>Задача 2.</b> Создайте коллекцию данных о бытовой технике на оптовом складе (наименование, тип техники,
            артикул, цена, количество, изображение). В коллекции должно быть не менее 12 элементов. Коллекцию
            инициируйте набором записей, хранить коллекцию в файле не требуется. По ссылкам, размещенным на странице
            вызывайте обработчики запросов GET:
        </p>

        <ul>
            <li>вывод коллекции, упорядоченной по наименованию</li>
            <li>вывод коллекции, упорядоченной по убыванию цены</li>
            <li>вывод коллекции, упорядоченной по возрастанию количества</li>
        </ul>

        <p>
            В форме задайте диапазон цены, по кнопке submit выводите часть коллекции – товары с ценой, попадающей в
            заданный диапазон.
        </p>
        <!-- #endregion -->

        <!-- #region Задача 3 -->
        <p>
            <b>Задача 3.</b> Требуется хранить коллекцию плоских геометрических фигур: квадраты, прямоугольники,
            разносторонние треугольники. По кнопке <b>submit</b> (метод POST) формируйте фигуру, случайным образом
            выбирая ее
            тип и размер. Добавляйте эту фигуру в коллекцию. Отображайте коллекцию на этой же странице, выводите также
            изображение фигуры.
        </p>

        <p>По ссылкам на этой странице вызывайте обработчики запросов GET:</p>

        <ul>
            <li>вывод только квадратов, по убыванию площади</li>
            <li>вывод только прямоугольников, по возрастанию периметра</li>
            <li>вывод только треугольников, в обратном порядке по отношению к порядку в коллекции</li>
            <li>вывод всей коллекции в исходном порядке</li>
            <li>вывод всей коллекции по убыванию площади</li>
        </ul>
        <!-- #endregion -->
    </details>
    <!-- #endregion -->

    <!-- #region Дополнение -->
    <details open>
        <summary>
            <h2>Дополнение</h2>
        </summary>

        <p>
            Запись занятия можно скачать
            <a href="https://cloud.mail.ru/public/8qaD/KNK72APNC" target="_blank">по этой ссылке</a>.
            Материалы занятия в этом же архиве.
        </p>
    </details>
    <!-- #endregion -->
</article>
