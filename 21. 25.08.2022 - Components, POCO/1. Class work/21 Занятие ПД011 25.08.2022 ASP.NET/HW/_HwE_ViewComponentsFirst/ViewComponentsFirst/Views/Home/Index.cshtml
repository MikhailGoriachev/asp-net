@{
    ViewBag.Title = "Главная";
}

<h4 class="text-primary">Теоретическая часть</h4>
<ul class="px-5">
    <li>Привязка простых данных к методу действия контроллера</li>
    <li>Привязка сложных типов данных</li>
    <li>Привязка коллекция</li>
    <li>Задание источника для привязки данных к методу действия</li>
    <li>Понятие о компонентах представлений</li>
    <li>Создание компонентов и применение компонентов в разметке</li>
    <li>POCO-компонент (Plain Old CLR Object)</li>
    <li>Построение компонента как расширение класса ViewComponent</li>
    <li>Типы результата метода Invoke() компонентов представлений</li>
    <li>Размещение разметки компонента представления – в папке представлений контроллера или в папке _Shared</li>
    <li>Передача параметров в компонент (в метод Invoke()) из представления</li>
    <li>Асинхронные компоненты</li>
    <li>Гибридные компоненты – контроллер с методом Invoke() и атрибутом ViewComponent (повторим этот материал 25.08.2022)</li>
</ul>

<h4 class="text-primary">Практическая часть</h4>

<p>
    Создать приложение ASP.NET Core MVC. Стилизацию приложения выполняйте при помощи фреймворка Bootstrap. Примените страницу компоновки. Не забывайте создавать модель/модели для решения задачи. По GET-запросу /Home/Index выводите этот текст.
</p>
<p>
    Требуется получать коллекцию пользователей используя ресурс по запросу https://jsonplaceholder.typicode.com/users/. Сохранять в коллекции поля: id, name, username, email, phone, website. Коллекцию выводить в компонент представления, коллекцию получайте сервисом. Компонент и сервис рекомендуется сделать асинхронными.
</p>

<ul>
    <li>По кнопке на отдельной странице вывести все посты пользователя (запрос вида https://jsonplaceholder.typicode.com/users/2/posts где 2 - идентификатор пользователя), вывод при помощи компонента представления, в этом же компоненте выводить количество постов, минимальную, среднюю и максимальную длина текста (поле body) в символах</li>
    <li>По кнопке на отдельной странице вывести фото из альбома пользователя (запрос вида https://jsonplaceholder.typicode.com/albums/1/photos  где 1 – идентификатор пользователя, выводить поле thumbnailUrl), в этом же компоненте выводить количество фотографий в альбоме (это обработка компонента)</li>
    <li>По кнопке на отдельной странице вывести список дел пользователя (запрос вида https://jsonplaceholder.typicode.com/users/3/todos где 3 – идентификатор пользователя), в этом же компоненте выводить количество дел, количество завершенных и не завершенных дел</li>
</ul>

<p>
    Разработайте сервис логирования, сохраняющий в файле application.log в папке App_Data факты создания и редактирования сведений о клиентах: момент времени операции с точностью до секунды, собственно данные клиента (включая закодированный пароль).
</p>

<p>
    Разработайте глобальный фильтр исключений – сервис с внедрением зависимостей. Параметры исключений записывайте в файл журнала при помощи сервиса логирования.
</p>

<h4 class="text-primary">Дополнительно</h4>
<p>
    Запись занятия можно скачать по <a href="https://cloud.mail.ru/public/kCVA/44Musvtkt">
        <strong>этой ссылке</strong>
    </a>, материалы занятия в этом же архиве.
</p>