@{
    ViewBag.title = "Главная страница";
    ViewBag.pageHeader = "ГЛАВНАЯ СТРАНИЦА";
    ViewBag.PageName = "Index";
}


<!--Текст задания-->
<section>
    <h3 class="text-primary">Теоретическая часть </h3>
    <!--Верхний список-->

    <ul class="text-size-bigger">
        <li>Привязка простых данных к методу действия контроллера</li>
        <li>Привязка сложных типов данных</li>
        <li>Привязка коллекция</li>
        <li>Задание источника для привязки данных к методу действия</li>
        <li>Понятие о компонентах представлений</li>
        <li>Создание компонентов и применение компонентов в разметке</li>
        <li>POCO-компонент (Plain Old CLR Object)</li>
        <li>Построение компонента как расширение класса ViewComponent</li>
        <li>Типы результата метода Invoke() компонентов представлений</li>
        <li>Размещение разметки компонента представления – в 
            папке представлений контроллера или в папке _Shared
            </li>
        <li>Передача параметров в компонент (в метод Invoke()) из представления</li>
        <li>Асинхронные компоненты</li>
        <li>Гибридные компоненты – контроллер с методом Invoke() и 
            атрибутом ViewComponent (повторим этот материал 25.08.2022) 
            </li>
      
    </ul>

    <h3 class="text-primary">Практическая часть</h3>
    <p>
       Создать приложение ASP.NET Core MVC. Стилизацию приложения выполняйте при помощи фреймворка Bootstrap. 
       Примените страницу компоновки. Не забывайте создавать модель/модели для решения задачи. 
       По GET-запросу /Home/Index выводите этот текст.  
    </p>
    <p>
        Требуется получать коллекцию пользователей используя <a class="link-to-record" target="_blank" href="https://jsonplaceholder.typicode.com">ресурс</a> по запросу 
        <a class="link-to-record" target="_blank" 
            href="https://jsonplaceholder.typicode.com/users/">
            https://jsonplaceholder.typicode.com/users/
        </a>
        . Сохранять в коллекции поля: id, name, username, email, phone, website. 
        Коллекцию выводить в компонент представления, коллекцию получайте сервисом. 
        Компонент и сервис рекомендуется сделать асинхронными.
    </p>
    <p>
        <ul>
            <li>По кнопке на отдельной странице вывести все посты пользователя 
                (запрос вида <a class="link-to-record" target="_blank" 
                href="https://jsonplaceholder.typicode.com/users/2/posts">
                https://jsonplaceholder.typicode.com/users/2/posts</a> где 2 - идентификатор пользователя), 
                при помощи компонента представления, в этом же компоненте выводить количество постов, минимальную, 
                среднюю и максимальную длина текста (поле body) в символах
            </li>
            <li>
                По кнопке на отдельной странице вывести фото из альбома пользователя (запрос вида 
                <a class="link-to-record" target="_blank" 
                href="https://jsonplaceholder.typicode.com/albums/1/photos">https://jsonplaceholder.typicode.com/albums/1/photos</a>
                где 1 – идентификатор пользователя, выводить поле thumbnailUrl), 
                в этом же компоненте выводить количество фотографий в альбоме (это обработка компонента)
            </li>
            <li>
                По кнопке на отдельной странице вывести список дел пользователя 
                (запрос вида 
                <a class="link-to-record" target="_blank" href="https://jsonplaceholder.typicode.com/users/3/todos">https://jsonplaceholder.typicode.com/users/3/todos</a> 
                где 3 – идентификатор пользователя), в этом же компоненте выводить количество дел, 
                количество завершенных и не завершенных дел
            </li>
        </ul>
    </p>

    <p>
        Разработайте сервис логирования, сохраняющий в файле <b>application.log</b> в папке <b>App_Data</b> факты создания и редактирования 
        сведений о клиентах: момент времени операции с точностью до секунды, 
        собственно данные клиента (включая закодированный пароль).
    </p>
    <p>
        Разработайте глобальный фильтр исключений – сервис с внедрением зависимостей. 
        Параметры исключений записывайте в файл журнала при помощи сервиса логирования.
    </p>

    <h3 class="text-primary">Дополнительно</h3>
    <p>
        Запись занятия можно скачать <a class="link-to-record" target="_blank" href="https://cloud.mail.ru/public/kCVA/44Musvtkt">по этой ссылке</a>.
        Материалы занятия в этом же архиве.
    </p>

</section>