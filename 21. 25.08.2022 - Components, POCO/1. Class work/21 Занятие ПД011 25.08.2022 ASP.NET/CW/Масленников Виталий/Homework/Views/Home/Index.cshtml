
@{
    ViewBag.Title = "Главная страница";
}

<div class="brief">
    <h2>Теоретическая часть</h2>

    
    <ul>
        <li>Привязка простых данных к методу действия контроллера</li>
        <li>Привязка сложных типов данных</li>
        <li>Привязка коллекция</li>
        <li>Задание источника для привязки данных к методу действия</li>
        <li>Понятие о компонентах представлений</li>
        <li>Создание компонентов и применение компонентов в разметке</li>
        <li><b>POCO</b>-компонент (<b>P</b>lain <b>O</b>ld <b>C</b>LR <b>O</b>bject)</li>
        <li>Построение компонента как расширение класса <b>ViewComponent</b></li>
        <li>Типы результата метода <b>Invoke()</b> компонентов представлений</li>
        <li>Размещение разметки компонента представления – в папке представлений контроллера или в папке <b>_Shared</b></li>
        <li>Передача параметров в компонент (в метод <b>Invoke()</b>) из представления</li>
        <li>Асинхронные компоненты</li>
        <li>Гибридные компоненты – контроллер с методом <b>Invoke()</b> и атрибутом <b>ViewComponent</b> (повторим этот материал 25.08.2022)  </li>
        </ul>
    
    <h2>Практическая часть</h2>

    <p>
        Создать приложение ASP.NET Core MVC. Стилизацию приложения выполняйте при помощи фреймворка Bootstrap. 
        Примените страницу компоновки. Не забывайте создавать модель/модели для решения задачи. По GET-запросу
        <b>/Home/Index</b> выводите этот текст. 
    </p>

    <p>Требуется получать коллекцию пользователей используя <a href="https://jsonplaceholder.typicode.com/">ресурс</a>
        по запросу <a href="https://jsonplaceholder.typicode.com/">https://jsonplaceholder.typicode.com/users/</a>.
        Сохранять в коллекции поля: id, name, username, email, phone, website. Коллекцию выводить в компонент представления, коллекцию получайте сервисом. Компонент и сервис рекомендуется сделать асинхронными. </p>
    
    <ul>
        <li>По кнопке на отдельной странице вывести все посты пользователя (запрос вида <a href="https://jsonplaceholder.typicode.com/users/2/posts">https://jsonplaceholder.typicode.com/users/2/posts</a> где 2 - идентификатор пользователя), вывод при помощи компонента представления, в этом же компоненте выводить количество постов, минимальную, среднюю и максимальную длина текста (поле body) в символах</li>
        <li>По кнопке на отдельной странице вывести фото из альбома пользователя (запрос вида <a href="https://jsonplaceholder.typicode.com/albums/1/photos">https://jsonplaceholder.typicode.com/albums/1/photos</a> где 1 – идентификатор пользователя, выводить поле thumbnailUrl), в этом же компоненте выводить количество фотографий в альбоме (это обработка компонента)</li>
        <li>По кнопке на отдельной странице вывести список дел пользователя (запрос вида <a href="https://jsonplaceholder.typicode.com/albums/1/photos">https://jsonplaceholder.typicode.com/users/3/todos</a> где 3 – идентификатор пользователя), в этом же компоненте выводить количество дел, количество завершенных и не завершенных дел</li>
    </ul>

    <p>Разработайте сервис логирования, сохраняющий в файле <b>application.log</b> в папке <b>App_Data</b> факты создания и редактирования сведений о клиентах: момент времени операции с точностью до секунды, собственно данные клиента (включая закодированный пароль).</p>
    
    <p>Разработайте глобальный фильтр исключений – сервис с внедрением зависимостей. Параметры исключений записывайте в файл журнала при помощи сервиса логирования.</p>
    
    <h2>Дополнительно</h2>
    <p>
        Запись занятия можно скачать по
        <a href="https://cloud.mail.ru/public/V4Bz/Y3rhejxB4">
            <b>этой ссылке</b>
        </a>.
        Материалы занятия – в этом же архиве.
    </p>
</div>