<section class="mx-5 my-4 bg-light shadow-sm border rounded-3 h-75 p-3">

    <!-- #region Теоретическая часть -->
    <details open>
        <summary class="h5 text-primary">
            Теоретическая часть
        </summary>

        <ul>
            <li>Понятие о фильтрах в ASP.NET Core MVC</li>
            <li>Порядок выполнения фильтров</li>
            <li>Создание синхронных и асинхронных фильтров действий</li>
            <li>Создание фильтров результатов</li>
            <li>Создание фильтров исключений</li>
            <li>Создание гибридного фильтра</li>
            <li>Пример простейшего сервиса</li>
            <li>Создание фильтров по типу при помощи атрибута <b>TypeFilter</b></li>
            <li>Создание фильтров по сервису при помощи атрибута <b>ServiceFilter</b></li>
            <li>Регистрация глобальных фильтров</li>
        </ul>

    </details>
    <!-- #endregion -->


    <!-- #region Практическая часть -->
    <details open>
        <summary class="h5 text-primary">
            Практическая часть
        </summary>

        <p>
            Создать приложение ASP.NET Core MVC. Стилизацию приложения выполняйте при помощи фреймворка Bootstrap.
        </p>

        <p>
            Примените страницу компоновки. Не забывайте создать модель для решения задачи. По GET-запросу
            <b>/Home/Index</b> выводите этот текст.
        </p>

        <!-- #region Задание 1 -->
        <p>
            <b>Задача 1.</b> Туристическая фирма организует пешие маршруты по степным заказникам. Сведения о
            туристических маршрутах содержат: идентификатор маршрута, начальный пункт маршрута, обязательный
            промежуточный пункт маршрута, конечный пункт маршрута, протяженность маршрута в км (целое число),
            сложность маршрута (значение из ряда <b>А-, А, А+, В-, В, В+, С-, С, С+; А-</b> соответствует минимальной
            сложности, <b>С+</b> соответствует максимальной сложности), фамилия и инициалы инструктора маршрута (всего
            на фирме работает пять инструкторов,
            требуется редактировать сведения об инструкторах, удалять или добавлять
            инструктора не надо).
        </p>

        <p>
            Сведения об инструкторах содержат: идентификатор инструктора, фамилия, имя, отчество, дата рождения,
            категория (<b>А, В, С; А</b> – низшая категория, <b>С</b> – высшая категория).
        </p>

        <p>
            Данные о маршрутах и инструкторах хранить в файле <b>routes.json</b>, <b>instructors.json</b> в папке
            <b>App_Data</b>. Требуется реализовать следующий функционал (критерии сортировки и выборки задавайте через
            переменные маршрута):
        </p>

        <ul>
            <li>Добавление маршрута (в форме на отдельной странице, валидация на стороне сервера и на стороне клиента)</li>
            <li>
                Редактирование сведений о маршруте (в форме на отдельной странице, это может быть та же страница,
                что страница добавления маршрута, требуется валидация на стороне сервера и на стороне клиента)
            </li>
            <li>Удаление сведений о маршруте</li>
            <li>Вывод сведений о маршруте в порядке хранения в файле</li>
            <li>Вывод сведений о маршруте по убыванию протяженности маршрута</li>
            <li>Вывод сведений о маршруте по возрастанию протяженности маршрута</li>
            <li>Вывод сведений о маршруте по возрастанию сложности</li>
            <li>Вывод маршрутов с заданным начальным пунктом</li>
            <li>Вывод маршрутов, проходящих через заданный промежуточный пункт</li>
            <li>
                Вывод маршрутов с протяженностью, попадающей в заданный интервал,
                требуется валидация на стороне сервера и на стороне клиент
            </li>
            <li>
                Выводите сведения о маршруте, выбранном кнопкой (аналогично редактированию) в модальном «окне» на
                той же странице, что и сведения о маршрутах (используйте AJAX, возвращение JSON из метода действия
                контроллера)
            </li>
            <li>Редактирование сведений об инструкторе, требуется валидация на стороне сервера и на стороне клиента</li>
            <li>Вывод сведений об инструкторах в порядке хранения в файле</li>
            <li>Вывод сведений об инструкторах в порядке убывания категорий</li>
            <li>Вывод сведений об инструкторах в алфавитном порядке</li>
            <li>Вывод сведений об инструкторах с заданной категорией</li>
            <li>
                <i>
                    Выводите сведения об инструкторе, выбранном кнопкой (аналогично редактированию) в модальном «окне»
                    на той же странице, что и сведения об инструкторах (используйте AJAX, возвращение JSON из метода
                    действия контроллера)
                </i>
            </li>
        </ul>
        <!-- #endregion -->

        <!-- #region Задача 2 -->
        <p>
            <b>Задача 2.</b> В приложение по <b>задаче 1</b> добавьте возможность работы с коллекцией клиентов
            туристической фирмы. Сведения о клиенте содержат идентификатор, фамилию, имя, отчество, возраст клиента в
            годах, номер телефона, адрес электронной почты, пароль, признак постоянного клиента, фотографию
            пользователя. При инициализации в коллекции клиентов должно быть не менее 12 записей.
        </p>

        <p>
            Требуется хранить коллекцию сведений о клиентах в файле <b>clients.json</b> в папке <b>App_Data</b>. Также
            надо добавлять, изменять и удалять сведения о клиенте, в том числе загружать фотографию клиента на сервер.
            При удалении сведений о клиенте его фотография также должна удаляться с сервера.
        </p>

        <p>Для сведений о клиенте действуют следующие бизнес-правила:</p>

        <ul>
            <li>
                Все поля обязательны для ввода (кроме идентификатора, это поле генерируется в коде для обеспечения
                уникальности)
            </li>
            <li>
                Пароль должен быть от 8 до 28 символов в длину, хранить пароль в коллекции и в файле требуется в
                закодированном виде, для кодирования требуется применить операцию «Исключающее ИЛИ» каждого байта
                строки пароля и числа 42
            </li>
            <li>Возраст клиента должен быть от 18 до 65 лет</li>
        </ul>

        <p>
            Для коллекции сведений о клиентах реализуйте следующий функционал (критерии сортировки и выборки задавайте
            через переменные маршрута):
        </p>

        <ul>
            <li>Вывод коллекции в порядке хранения в файле данных</li>
            <li>Вывод коллекции в алфавитном порядке</li>
            <li>Вывод коллекции по убыванию возраста</li>
            <li>
                Вывод сведений о клиентах с заданным диапазоном возраста (требуется валидация параметров на стороне
                клиента и на стороне сервера)
            </li>
            <li>Вывод сведений о клиентах по фамилии</li>
            <li>Вывод сведений о постоянных клиентах</li>
            <li>
                Вывод сведений о клиенте, выбранном кнопкой (аналогично редактированию) в модальном «окне» на той же
                странице, что и сведения о клиентах (используйте AJAX, возвращение JSON из метода действия контроллера)
            </li>
        </ul>

        <p>
            <i>
                Разработайте сервис логирования, сохраняющий в файле application.log в папке App_Data факты создания и
                редактирования сведений о клиентах: момент времени операции с точностью до секунды, собственно данные
                клиента (включая закодированный пароль).
            </i>
        </p>

        <p>
            <i>
                Разработайте гибридный фильтр, фиксирующий при помощи сервиса логирования время работы методов действия
                и результатов. Задайте профилирование этим фильтром контроллер и результаты сведений об инструкторах.
            </i>
        </p>

        <p>
            <i>
                Разработайте глобальный фильтр исключений – сервис с внедрением зависимостей, для проверки работы
                фильтра предусмотрите соответствующие действия в контроллерах маршрутов, инструкторов и клиентов.
                Параметры исключений записывайте в файл журнала при помощи сервиса логирования.
            </i>
        </p>
        <!-- #endregion -->

    </details>
    <!-- #endregion -->

    <!-- #region Дополнительно -->
    <details open>
        <summary class="h5 text-primary">
            Дополнительно
        </summary>

        <p>
            Запись занятия можно скачать по
            <a href="https://cloud.mail.ru/public/nG5d/iMt1enrUb" target="_blank">
                <b>этой ссылке</b>
            </a>,
            материалы занятия в этом же архиве.
        </p>

    </details>
    <!-- #endregion -->
</section>
