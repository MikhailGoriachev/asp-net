@page
@model HomeWork.Pages.IndexModel
@{
    ViewBag.Title = "Главная";
}

<section class="mx-5 my-4 bg-light shadow-sm border rounded-3 h-75 p-3">
    <!-- #region Теоретическая часть -->
    <details open>
        <summary class="h5 text-primary ">
            Теоретическая часть
        </summary>

        <ul>
            <li>Загрузка файлов на сервер</li>
            <li>Понятие о внедрении зависимостей в ASP.NET Core, внедрение зависимости при помощи конструктора</li>
            <li>Возвращение результатов в модели страницы, тип <b>IActionResult</b></li>
            <li>Возвращение текстового контекста</li>
            <li>Возвращение страницы</li>
            <li>Переадресация страницы, передача данных в параметрах маршрута</li>
            <li>Возвращение статусных кодов</li>
            <li>Возвращение файлов (скачивание файлов клиентом) – <i>подробнее рассмотрим на занятии в понедельник,11.07.2022</i></li>
        </ul>

    </details>
    <!-- #endregion -->


    <!-- #region Практическая часть -->
    <details open>
        <summary class="h5 text-primary">
            Практическая часть
        </summary>

        <p>
            Разработайте приложение ASP.NET Core, состоящее из нескольких страниц Razor Pages. Стилизацию разметки
            выполняйте при помощи Bootstrap.
        </p>

        <!-- #region Задание 1 -->
        <p>
            <b>Страница 1</b>. Создайте коллекцию данных о бытовой технике на оптовом складе (наименование, тип техники,
            артикул, цена, количество, изображение). В коллекции должно быть не менее 12 элементов. Коллекцию инициируйте
            набором записей, храните коллекцию в файле формата JSON в папке App_Data проекта.
        </p>

        <p>
            По кнопкам-ссылкам, размещенным на странице вызывайте обработчики запросов GET:
        </p>

        <ul>
            <li>вывод коллекции, упорядоченной по наименованию</li>
            <li>вывод коллекции, упорядоченной по убыванию цены</li>
            <li>вывод коллекции, упорядоченной по возрастанию количества </li>
            <li>
                форма добавления элемента в коллекцию.  Предусмотрите возможность загрузки изображения на сервер
            </li>
        </ul>
        <!-- #endregion -->

        <!-- #region Задание 2 -->
        <p>
            <b>Страница 2</b>. Требуется хранить в файле формата JSON в папке App_Data проекта коллекцию сведений о
            кораблях: тип, название, длина, ширина, водоизмещение, год постройки, фото корабля. Инициализация коллекции
            сведений о кораблях должна проводиться при отсутствии файла (формируйте не менее 10 записей).
        </p>

        <p>Функционал для разработки:</p>

        <ul>
            <li>вывод всей коллекции в исходном порядке</li>
            <li>вывод коллекции, упорядоченной по возрастанию года изготовления</li>
            <li>вывод коллекции, упорядоченной по убыванию водоизмещения</li>
            <li>вывод коллекции, упорядоченной по названиям кораблей</li>
            <li>добавление корабля в коллекцию (естественно, с сохранением измененной коллекции в файле)</li>
        </ul>
        <!-- #endregion -->

        <!-- #region Задание 3 -->
        <p>
            <b>Страница 3</b>. Реализуйте карусель для вывода всех фотографий бытовой техники, хранящихся в Вашем
            приложении
        </p>
        <!-- #endregion -->

        <!-- #region Задание 4 -->
        <p>
            <b>Страница 4</b>. Реализуйте карусель для вывода всех фотографий кораблей, хранящихся в Вашем приложении
        </p>
        <!-- #endregion -->

    </details>
    <!-- #endregion -->

    <!-- #region Дополнительно -->
    <details open>
        <summary class="h5 text-primary">
            Дополнительно
        </summary>

        <p>
            Запись занятия можно скачать по <a href="https://cloud.mail.ru/public/4FWG/3Tz8BcW1f" target="_blank">этой
            ссылке</a>. Материалы занятия в этом же архиве.
        </p>

    </details>
    <!-- #endregion -->
</section>
